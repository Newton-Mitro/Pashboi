import 'package:pashboi/features/authenticated/personnel/fallback_acceptance/domain/entities/fallback_leave_application_entites.dart';

class FallbackRequestModel extends FallbackLeaveApplicationEntities {
  FallbackRequestModel({
    required String id,
    required String leaveTypeCode,
    required String leaveType,
    required int leaveApplicationId,
    required int employeeId,
    required String employeeName,
    required String departmentName,
    required String designationName,
    required String applicationDate,
    required String rejoiningDate,
    required double totalLeaveDays,
    required String remarks,
    required String supervisorName,
    required String fullName,
    required String fallbackEmployeeCode,
    required int fallbackPersonId,
    required String fallbackPersonName,
    required String currentStage,
    required String stageCode,
    required DateTime fromDate,
    required DateTime toDate,
    required String employeeCode,
  }) : super(
         id: leaveTypeCode,
         leaveTypeCode: leaveTypeCode,
         leaveType: leaveType,
         leaveApplicationId: leaveApplicationId,
         employeeId: employeeId,
         employeeName: employeeName,
         departmentName: departmentName,
         designationName: designationName,
         applicationDate: applicationDate,
         rejoiningDate: rejoiningDate,
         totalLeaveDays: totalLeaveDays,
         remarks: remarks,
         supervisorName: supervisorName,
         fullName: fullName,
         fallbackEmployeeCode: fallbackEmployeeCode,
         fallbackPersonId: fallbackPersonId,
         fallbackPersonName: fallbackPersonName,
         currentStage: currentStage,
         stageCode: stageCode,
         fromDate: fromDate,
         toDate: toDate,
         employeeCode: employeeCode,
       );

  factory FallbackRequestModel.fromJson(Map<String, dynamic> json) {
    return FallbackRequestModel(
      id: json['LeaveTypeCode'] ?? '',
      leaveTypeCode: json['LeaveTypeCode'] ?? '',
      leaveType: json['LeaveType'] ?? '',
      leaveApplicationId: json['LeaveApplicationId'] ?? 0,
      employeeId: json['EmployeeId'] ?? 0,
      employeeName: json['EmployeeName'] ?? '',
      departmentName: json['DepartmentName'] ?? '',
      designationName: json['DesignationName'] ?? '',
      applicationDate: json['ApplicationDate'] ?? '',
      rejoiningDate: json['RejoiningDate'] ?? '',
      totalLeaveDays: (json['TotalLeaveDays'] ?? 0).toDouble(),
      remarks: json['Remarks'] ?? '',
      supervisorName: json['SupervisorName'] ?? '',
      fullName: json['FullName'] ?? '',
      fallbackEmployeeCode: json['FallbackEmployeeCode'] ?? '',
      fallbackPersonId: json['FallbackPersonId'] ?? 0,
      fallbackPersonName: json['FallbackPersonName'] ?? '',
      currentStage: json['CurrentStage'] ?? '',
      stageCode: json['StageCode'] ?? '',
      fromDate: DateTime.parse(json['FromDate']),
      toDate: DateTime.parse(json['ToDate']),
      employeeCode: json['EmployeeCode'] ?? '',
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'Id': leaveTypeCode,
      'LeaveTypeCode': leaveTypeCode,
      'LeaveType': leaveType,
      'LeaveApplicationId': leaveApplicationId,
      'EmployeeId': employeeId,
      'EmployeeName': employeeName,
      'DepartmentName': departmentName,
      'DesignationName': designationName,
      'ApplicationDate': applicationDate,
      'RejoiningDate': rejoiningDate,
      'TotalLeaveDays': totalLeaveDays,
      'Remarks': remarks,
      'SupervisorName': supervisorName,
      'FullName': fullName,
      'FallbackEmployeeCode': fallbackEmployeeCode,
      'FallbackPersonId': fallbackPersonId,
      'FallbackPersonName': fallbackPersonName,
      'CurrentStage': currentStage,
      'StageCode': stageCode,
      'FromDate': fromDate.toIso8601String(),
      'ToDate': toDate.toIso8601String(),
      'EmployeeCode': employeeCode,
    };
  }
}
