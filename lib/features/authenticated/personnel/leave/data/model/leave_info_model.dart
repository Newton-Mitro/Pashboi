import 'package:pashboi/features/authenticated/personnel/leave/domain/entities/leave_info_entity.dart';

class LeaveInfoModel extends LeaveInfoEntity {
  LeaveInfoModel({
    required String id,
    required String leaveTypeCode,
    required String leaveType,
    required String employeeId,
    required String totalLeaveDays,
    required String balance,
    required String totalLeaveApplied,
    required String lastApplicationDate,
    required String maxBalance,
    required String minimumNoticeDay,
    required String maxLeaveAtATime,
    required String documentsRequiredDays,
    required String maximumHourLeave,
    required String applyBeforeDays,
    required String isFallbackRequired,
    required String maximumFallbackDays,
    required String isEditable,
    required String isRejoinDateRequired,
    required String enableFutureDateApplication,
    required String enablePastDateApplication,
    required String withTime,
    required String enablePresentDateApplication,
    required String requireToDate,
  }) : super(
         id: leaveTypeCode,
         leaveTypeCode: leaveTypeCode,
         leaveType: leaveType,
         employeeId: employeeId,
         totalLeaveDays: totalLeaveDays,
         balance: balance,
         totalLeaveApplied: totalLeaveApplied,
         lastApplicationDate: lastApplicationDate,
         maxBalance: maxBalance,
         minimumNoticeDay: minimumNoticeDay,
         maxLeaveAtATime: maxLeaveAtATime,
         documentsRequiredDays: documentsRequiredDays,
         maximumHourLeave: maximumHourLeave,
         applyBeforeDays: applyBeforeDays,
         isFallbackRequired: isFallbackRequired,
         maximumFallbackDays: maximumFallbackDays,
         isEditable: isEditable,
         isRejoinDateRequired: isRejoinDateRequired,
         enableFutureDateApplication: enableFutureDateApplication,
         enablePastDateApplication: enablePastDateApplication,
         withTime: withTime,
         enablePresentDateApplication: enablePresentDateApplication,
         requireToDate: requireToDate,
       );

  factory LeaveInfoModel.fromJson(Map<String, dynamic> json) {
    return LeaveInfoModel(
      id: json['LeaveTypeCode'] ?? '',
      leaveTypeCode: json['LeaveTypeCode'] ?? '',
      leaveType: json['LeaveType'] ?? '',
      employeeId: json['EmployeeId'] ?? '',
      totalLeaveDays: json['TotalLeaveDays'] ?? '',
      balance: json['Balance'] ?? '',
      totalLeaveApplied: json['TotalLeaveApplied'] ?? '',
      lastApplicationDate: json['LastApplicationDate'] ?? '',
      maxBalance: json['MaxBalance'] ?? '',
      minimumNoticeDay: json['MinimumNoticeDay'] ?? '',
      maxLeaveAtATime: json['MaxLeaveAtATime'] ?? '',
      documentsRequiredDays: json['DocumentsRequiredDays'] ?? '',
      maximumHourLeave: json['MaximumHourLeave'] ?? '',
      applyBeforeDays: json['ApplyBeforeDays'] ?? '',
      isFallbackRequired: json['IsFallbackRequired'] ?? '',
      maximumFallbackDays: json['MaximumFallbackDays'] ?? '',
      isEditable: json['IsEditable'] ?? '',
      isRejoinDateRequired: json['IsRejoinDateRequired'] ?? '',
      enableFutureDateApplication: json['EnableFutureDateApplication'] ?? '',
      enablePastDateApplication: json['EnablePastDateApplication'] ?? '',
      withTime: json['WithTime'] ?? '',
      enablePresentDateApplication: json['EnablePresentDateApplication'] ?? '',
      requireToDate: json['RequireToDate'] ?? '',
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'LeaveTypeCode': leaveTypeCode,
      'LeaveType': leaveType,
      'EmployeeId': employeeId,
      'TotalLeaveDays': totalLeaveDays,
      'Balance': balance,
      'TotalLeaveApplied': totalLeaveApplied,
      'LastApplicationDate': lastApplicationDate,
      'MaxBalance': maxBalance,
      'MinimumNoticeDay': minimumNoticeDay,
      'MaxLeaveAtATime': maxLeaveAtATime,
      'DocumentsRequiredDays': documentsRequiredDays,
      'MaximumHourLeave': maximumHourLeave,
      'ApplyBeforeDays': applyBeforeDays,
      'IsFallbackRequired': isFallbackRequired,
      'MaximumFallbackDays': maximumFallbackDays,
      'IsEditable': isEditable,
      'IsRejoinDateRequired': isRejoinDateRequired,
      'EnableFutureDateApplication': enableFutureDateApplication,
      'EnablePastDateApplication': enablePastDateApplication,
      'WithTime': withTime,
      'EnablePresentDateApplication': enablePresentDateApplication,
      'RequireToDate': requireToDate,
    };
  }
}
