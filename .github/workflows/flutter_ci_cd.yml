name: Flutter Build, Test, Analyze, Build APK, and Deploy APK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.0" # Adjust to your Flutter version

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Ensure .env exists (fallback to .env.example if needed)
        run: |
          if [ ! -f .env ]; then
            echo ".env not found, copying from .env.example"
            cp .env.example .env
          fi

      - name: Override .env values from GitHub Secrets
        run: |
          echo "Overriding .env with GitHub Secrets"
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env

      - name: Cache Flutter build outputs
        uses: actions/cache@v3
        with:
          path: |
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-build-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-build-

      - name: Analyze project
        run: flutter analyze || true

      - name: Run tests
        run: flutter test

      # - name: Build APK (optional)
      #   run: flutter build apk --debug

      # - name: Upload APK artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-debug-apk
      #     path: build/app/outputs/flutter-apk/app-debug.apk
